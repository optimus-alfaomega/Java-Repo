/**
 * This class is generated by jOOQ
 */
package io.github.picodotdev.blogbitix.multidatabase.jooq.purchases.tables;


import io.github.picodotdev.blogbitix.multidatabase.jooq.purchases.Keys;
import io.github.picodotdev.blogbitix.multidatabase.jooq.purchases.Purchases;
import io.github.picodotdev.blogbitix.multidatabase.jooq.purchases.tables.records.PurchaseRecord;
import io.github.picodotdev.blogbitix.multidatabase.misc.TimestampConverter;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Purchase extends TableImpl<PurchaseRecord> {

	private static final long serialVersionUID = 1777135095;

	/**
	 * The reference instance of <code>PURCHASES.PURCHASE</code>
	 */
	public static final Purchase PURCHASE = new Purchase();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PurchaseRecord> getRecordType() {
		return PurchaseRecord.class;
	}

	/**
	 * The column <code>PURCHASES.PURCHASE.ID</code>.
	 */
	public final TableField<PurchaseRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PURCHASES.PURCHASE.CREATIONDATE</code>.
	 */
	public final TableField<PurchaseRecord, LocalDateTime> CREATIONDATE = createField("CREATIONDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampConverter());

	/**
	 * The column <code>PURCHASES.PURCHASE.QUANTITY</code>.
	 */
	public final TableField<PurchaseRecord, Long> QUANTITY = createField("QUANTITY", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>PURCHASES.PURCHASE.PRICE</code>.
	 */
	public final TableField<PurchaseRecord, BigDecimal> PRICE = createField("PRICE", org.jooq.impl.SQLDataType.DECIMAL.precision(7, 2), this, "");

	/**
	 * The column <code>PURCHASES.PURCHASE.ITEM_ID</code>.
	 */
	public final TableField<PurchaseRecord, Long> ITEM_ID = createField("ITEM_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>PURCHASES.PURCHASE</code> table reference
	 */
	public Purchase() {
		this("PURCHASE", null);
	}

	/**
	 * Create an aliased <code>PURCHASES.PURCHASE</code> table reference
	 */
	public Purchase(String alias) {
		this(alias, PURCHASE);
	}

	private Purchase(String alias, Table<PurchaseRecord> aliased) {
		this(alias, aliased, null);
	}

	private Purchase(String alias, Table<PurchaseRecord> aliased, Field<?>[] parameters) {
		super(alias, Purchases.PURCHASES, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PurchaseRecord, Long> getIdentity() {
		return Keys.IDENTITY_PURCHASE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PurchaseRecord> getPrimaryKey() {
		return Keys.PK_PURCHASE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PurchaseRecord>> getKeys() {
		return Arrays.<UniqueKey<PurchaseRecord>>asList(Keys.PK_PURCHASE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PurchaseRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PurchaseRecord, ?>>asList(Keys.ITEM_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Purchase as(String alias) {
		return new Purchase(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Purchase rename(String name) {
		return new Purchase(name, null);
	}
}
