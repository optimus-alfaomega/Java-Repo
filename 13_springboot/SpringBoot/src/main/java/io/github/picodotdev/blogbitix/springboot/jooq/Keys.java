/**
 * This class is generated by jOOQ
 */
package io.github.picodotdev.blogbitix.springboot.jooq;


import io.github.picodotdev.blogbitix.springboot.jooq.tables.Department;
import io.github.picodotdev.blogbitix.springboot.jooq.tables.Employee;
import io.github.picodotdev.blogbitix.springboot.jooq.tables.EmployeeDepartment;
import io.github.picodotdev.blogbitix.springboot.jooq.tables.records.DepartmentRecord;
import io.github.picodotdev.blogbitix.springboot.jooq.tables.records.EmployeeDepartmentRecord;
import io.github.picodotdev.blogbitix.springboot.jooq.tables.records.EmployeeRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>JOOQ</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<EmployeeRecord, Long> IDENTITY_EMPLOYEE = Identities0.IDENTITY_EMPLOYEE;
	public static final Identity<DepartmentRecord, Long> IDENTITY_DEPARTMENT = Identities0.IDENTITY_DEPARTMENT;
	public static final Identity<EmployeeDepartmentRecord, Long> IDENTITY_EMPLOYEE_DEPARTMENT = Identities0.IDENTITY_EMPLOYEE_DEPARTMENT;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<EmployeeRecord> PK_EMPLOYEE = UniqueKeys0.PK_EMPLOYEE;
	public static final UniqueKey<DepartmentRecord> PK_DEPARTMENT = UniqueKeys0.PK_DEPARTMENT;
	public static final UniqueKey<EmployeeDepartmentRecord> PK_EMPLOYEE_DEPARTMENT = UniqueKeys0.PK_EMPLOYEE_DEPARTMENT;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<EmployeeDepartmentRecord, EmployeeRecord> EMPLOYEE_ID = ForeignKeys0.EMPLOYEE_ID;
	public static final ForeignKey<EmployeeDepartmentRecord, DepartmentRecord> DEPARTMENT_ID = ForeignKeys0.DEPARTMENT_ID;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<EmployeeRecord, Long> IDENTITY_EMPLOYEE = createIdentity(Employee.EMPLOYEE, Employee.EMPLOYEE.ID);
		public static Identity<DepartmentRecord, Long> IDENTITY_DEPARTMENT = createIdentity(Department.DEPARTMENT, Department.DEPARTMENT.ID);
		public static Identity<EmployeeDepartmentRecord, Long> IDENTITY_EMPLOYEE_DEPARTMENT = createIdentity(EmployeeDepartment.EMPLOYEE_DEPARTMENT, EmployeeDepartment.EMPLOYEE_DEPARTMENT.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<EmployeeRecord> PK_EMPLOYEE = createUniqueKey(Employee.EMPLOYEE, Employee.EMPLOYEE.ID);
		public static final UniqueKey<DepartmentRecord> PK_DEPARTMENT = createUniqueKey(Department.DEPARTMENT, Department.DEPARTMENT.ID);
		public static final UniqueKey<EmployeeDepartmentRecord> PK_EMPLOYEE_DEPARTMENT = createUniqueKey(EmployeeDepartment.EMPLOYEE_DEPARTMENT, EmployeeDepartment.EMPLOYEE_DEPARTMENT.ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<EmployeeDepartmentRecord, EmployeeRecord> EMPLOYEE_ID = createForeignKey(io.github.picodotdev.blogbitix.springboot.jooq.Keys.PK_EMPLOYEE, EmployeeDepartment.EMPLOYEE_DEPARTMENT, EmployeeDepartment.EMPLOYEE_DEPARTMENT.EMPLOYEE_ID);
		public static final ForeignKey<EmployeeDepartmentRecord, DepartmentRecord> DEPARTMENT_ID = createForeignKey(io.github.picodotdev.blogbitix.springboot.jooq.Keys.PK_DEPARTMENT, EmployeeDepartment.EMPLOYEE_DEPARTMENT, EmployeeDepartment.EMPLOYEE_DEPARTMENT.DEPARTMENT_ID);
	}
}
