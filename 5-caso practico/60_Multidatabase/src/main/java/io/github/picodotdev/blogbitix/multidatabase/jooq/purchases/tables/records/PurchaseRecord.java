/**
 * This class is generated by jOOQ
 */
package io.github.picodotdev.blogbitix.multidatabase.jooq.purchases.tables.records;


import io.github.picodotdev.blogbitix.multidatabase.jooq.purchases.tables.Purchase;
import io.github.picodotdev.blogbitix.multidatabase.jooq.purchases.tables.interfaces.IPurchase;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PurchaseRecord extends UpdatableRecordImpl<PurchaseRecord> implements Record5<Long, LocalDateTime, Long, BigDecimal, Long>, IPurchase {

	private static final long serialVersionUID = 711123054;

	/**
	 * Setter for <code>PURCHASES.PURCHASE.ID</code>.
	 */
	@Override
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PURCHASES.PURCHASE.ID</code>.
	 */
	@NotNull
	@Override
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>PURCHASES.PURCHASE.CREATIONDATE</code>.
	 */
	@Override
	public void setCreationdate(LocalDateTime value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PURCHASES.PURCHASE.CREATIONDATE</code>.
	 */
	@Override
	public LocalDateTime getCreationdate() {
		return (LocalDateTime) getValue(1);
	}

	/**
	 * Setter for <code>PURCHASES.PURCHASE.QUANTITY</code>.
	 */
	@Override
	public void setQuantity(Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PURCHASES.PURCHASE.QUANTITY</code>.
	 */
	@Override
	public Long getQuantity() {
		return (Long) getValue(2);
	}

	/**
	 * Setter for <code>PURCHASES.PURCHASE.PRICE</code>.
	 */
	@Override
	public void setPrice(BigDecimal value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PURCHASES.PURCHASE.PRICE</code>.
	 */
	@Override
	public BigDecimal getPrice() {
		return (BigDecimal) getValue(3);
	}

	/**
	 * Setter for <code>PURCHASES.PURCHASE.ITEM_ID</code>.
	 */
	@Override
	public void setItemId(Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>PURCHASES.PURCHASE.ITEM_ID</code>.
	 */
	@Override
	public Long getItemId() {
		return (Long) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, LocalDateTime, Long, BigDecimal, Long> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, LocalDateTime, Long, BigDecimal, Long> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Purchase.PURCHASE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<LocalDateTime> field2() {
		return Purchase.PURCHASE.CREATIONDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field3() {
		return Purchase.PURCHASE.QUANTITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field4() {
		return Purchase.PURCHASE.PRICE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field5() {
		return Purchase.PURCHASE.ITEM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocalDateTime value2() {
		return getCreationdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value3() {
		return getQuantity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value4() {
		return getPrice();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value5() {
		return getItemId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PurchaseRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PurchaseRecord value2(LocalDateTime value) {
		setCreationdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PurchaseRecord value3(Long value) {
		setQuantity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PurchaseRecord value4(BigDecimal value) {
		setPrice(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PurchaseRecord value5(Long value) {
		setItemId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PurchaseRecord values(Long value1, LocalDateTime value2, Long value3, BigDecimal value4, Long value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IPurchase from) {
		setId(from.getId());
		setCreationdate(from.getCreationdate());
		setQuantity(from.getQuantity());
		setPrice(from.getPrice());
		setItemId(from.getItemId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IPurchase> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PurchaseRecord
	 */
	public PurchaseRecord() {
		super(Purchase.PURCHASE);
	}

	/**
	 * Create a detached, initialised PurchaseRecord
	 */
	public PurchaseRecord(Long id, LocalDateTime creationdate, Long quantity, BigDecimal price, Long itemId) {
		super(Purchase.PURCHASE);

		setValue(0, id);
		setValue(1, creationdate);
		setValue(2, quantity);
		setValue(3, price);
		setValue(4, itemId);
	}
}
